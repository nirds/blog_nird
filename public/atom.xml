<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[NIRD Blog]]></title>
  <link href="http://nird-blog.herokuapp.com//atom.xml" rel="self"/>
  <link href="http://nird-blog.herokuapp.com//"/>
  <updated>2014-01-14T14:28:59-08:00</updated>
  <id>http://nird-blog.herokuapp.com//</id>
  <author>
    <name><![CDATA[NIRD, LLC]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA['Whose Wife Are You?']]></title>
    <link href="http://nird-blog.herokuapp.com//blog/2013/12/12/whose-wife-are-you/"/>
    <updated>2013-12-12T13:34:00-08:00</updated>
    <id>http://nird-blog.herokuapp.com//blog/2013/12/12/whose-wife-are-you</id>
    <content type="html"><![CDATA[<p>In August of 2011, Renée Hendrickson (nee DeVoursney) presented her talk, &lsquo;Whose Wife are You?&rsquo; at <a href="http://madisonruby.org/">Madison Ruby</a>. You can watch it <a href="http://confreaks.com/videos/636-madisonruby2011-whose-wife-are-you">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Advantages of a Custom CSS Framework]]></title>
    <link href="http://nird-blog.herokuapp.com//blog/2013/10/24/the-advantages-of-a-custom-css-framework/"/>
    <updated>2013-10-24T16:27:00-07:00</updated>
    <id>http://nird-blog.herokuapp.com//blog/2013/10/24/the-advantages-of-a-custom-css-framework</id>
    <content type="html"><![CDATA[<p>Your organization is building a premier app. You are confident in your target audience and the excellence of your design, and yet you know that in a rapidly evolving technology environment change is inevitable. NIRD has extensive experience working with a variety of design styles and front-end frameworks. Regardless of the style or framework you choose, the best practice for developing maintainable front-end code is to modularize your front-end elements. Breaking your front-end code into discrete chunks makes it easier to adapt to new technologies, change designs, and add new functionality over the life of the application.</p>

<!-- more -->


<p>Each project starts with web designers translating business needs and customer knowledge into visually appealing style guides for a website. These guides are then “sliced-up” into style and behavior code by front-end developers to efficiently present the back-end business logic to users via a custom user interface.</p>

<p>Front end frameworks are sometimes used to automate portions of this process. One well-known framework is Twitter Bootstrap, which provides complete css stylesheets and prepackaged javascript behaviors to dramatically reduce or eliminate the design process for prototyping applications. For hackathon projects and minimum viable products, Bootstrap can deliver a professional (if stylistically generic) presentation to end users.</p>

<p>What happens when the style for your new site, based on carefully considered branding decisions, doesn&rsquo;t look or behave like Bootstrap? When a web designer presents a style guide for a site, and did not start with Bootstrap elements, some key disadvantages become apparent:</p>

<ul>
<li>Bootstrap is highly interconnected css code. Changes can have far-reaching and unanticipated side effects; change becomes expensive.</li>
<li>If the design was not specifically created with Bootstrap in mind, those beautiful style features your organization has invested in will need to be shoehorned inefficiently and awkwardly into existing framework components.</li>
<li>As the design changes or is expanded in the future, Bootstrap will be increasingly resistant to modifications. (This is true of designs that began with Bootstrap in mind as well.)</li>
</ul>


<p>There are a variety of other front-end frameworks that bring fewer visual design opinions with them, opting instead to provide functionality and behavior tools. These frameworks are more flexible, but your custom design may still lead to conflict with your framework when your design needs violate its underlying assumptions. For example, consider how you want your device to display in a mobile context: should it look the same for a small blackberry screen and a large android screen? A given framework may support this, or it may assume that all phone contexts are roughly the same as an iPhone.</p>

<p>Designers can approach this problem by limiting their stylistic and behavior choices to conform with a front-end framework, or a front-end framework can be selected afterward to minimize conflicts with the design intent (absorbing the additional maintenance costs when changes become necessary). Key considerations for choosing a preexisting front-end are:</p>

<ul>
<li>Which design components will be useful for this design?</li>
<li>How many extra features are included that will have to be rendered inert?</li>
<li>Does the framework bring enough value to overcome the costs of its use?</li>
</ul>


<p>NIRD has found that the best practice is usually to avoid the compromise altogether. We create consistently and efficiently coded styles and behavior for each project, with a focus on remaining true to the design. Our approach is inspired by <a href="http://roytomeij.com/">Roy Tomeij</a>, using SASS partials to create modular visual components to maximize reuse. When a new component is needed, it becomes simple to extend an existing module or add a new one. Style and behavior become separate concerns, making changes inexpensive and easily understood.</p>

<p>You are investing in the success of your app today with an awesome and intuitive design. Take advantage of NIRD&rsquo;s front end expertise to invest in your app&rsquo;s future.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meet the newest NIRD]]></title>
    <link href="http://nird-blog.herokuapp.com//blog/2013/09/17/meet-the-newest-nird-employee/"/>
    <updated>2013-09-17T09:55:00-07:00</updated>
    <id>http://nird-blog.herokuapp.com//blog/2013/09/17/meet-the-newest-nird-employee</id>
    <content type="html"><![CDATA[<p>Hi &ndash; I&rsquo;m Bethany Rentz and I just started working at NIRD on Monday. I&rsquo;m very excited to join the team &ndash; and to start working on client projects! Coming from a large software company &ndash; I&rsquo;m not sure what to expect working at a small office &ndash; but so far everyone is a lot of fun and very enthusiastic. BTW &ndash; we are having an office warming party next week &ndash; which I&rsquo;m sure is also a welcome party for me &ndash; so everyone can check out the new digs: <a href="http://www.meetup.com/NIRD-Seattle/events/136283852/">HQ Warming</a>.</p>

<p>There is a lot of cool stuff going on here &ndash; I got an overview of current projects and what I could work on. There are a couple of projects I will be working on &ndash; and will start getting up to speed on all the NIRD tools.</p>

<p>In the afternoon &ndash; we went out for Frozen Custard &ndash; a NIRD tradition &ndash; and I learned about the company values &ndash; most importantly our focus on the customer and our strong collaboration culture! Then it was time for me to update the NIRD website with my <a href="http://nird.us/bethany">bio</a> &ndash; I made the changes and deployed the code to production.</p>

<p>Over the next couple of weeks I&rsquo;ll be focused on getting up to speed on existing projects and starting to do some development. Hopefully in a future blog post I&rsquo;ll share something more technical.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA['You Can't Miss What You Can't Measure']]></title>
    <link href="http://nird-blog.herokuapp.com//blog/2013/09/16/you-cant-miss-what-you-cant-measure/"/>
    <updated>2013-09-16T13:39:00-07:00</updated>
    <id>http://nird-blog.herokuapp.com//blog/2013/09/16/you-cant-miss-what-you-cant-measure</id>
    <content type="html"><![CDATA[<p>In August, Kerri Miller presented her talk, &ldquo;You Can&rsquo;t Miss What You Can&rsquo;t Measure&rdquo; at <a href="http://steelcityruby.org/">Steel City Ruby</a>. You can watch the video <a href="http://steelcityruby.confbots.com/video/72770891">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Customizing Sublime Text]]></title>
    <link href="http://nird-blog.herokuapp.com//blog/2013/09/05/customizing-sublime-text/"/>
    <updated>2013-09-05T15:47:00-07:00</updated>
    <id>http://nird-blog.herokuapp.com//blog/2013/09/05/customizing-sublime-text</id>
    <content type="html"><![CDATA[<h3>What Sublime Text is:</h3>

<hr />

<p>Sublime Text is a cross platform text editor, excellent for code, markup, and prose. It&rsquo;s free to try and fun to customize. You can customize it in several ways: the color scheme, the UI aspects, key bindings, and a variety of preferences.
 <!-- more --></p>

<h3>How to get it:</h3>

<hr />

<ul>
<li>Download from <a href="http://www.sublimetext.com/">http://www.sublimetext.com/</a>.</li>
<li><a href="http://docs.sublimetext.info/en/latest/getting_started/install.html">Installation instructions vary</a> according to your OS.</li>
<li>You can try out the full version for as long as you&rsquo;d like before you buy, but it&rsquo;s &ldquo;nagware&rdquo;&ndash; will remind you often to purchase a license.</li>
<li>Unlimited commercial licenses cost $70 currently. Purchase one <a href="https://www.sublimetext.com/buy">here</a>.</li>
<li>When you enter a purchased license key (under Help &ndash;> Enter Key), no more nagging!</li>
</ul>


<h3>Cool customization:</h3>

<hr />

<p>Get <a href="https://sublime.wbond.net/">Package Control</a> to manage plugins. It makes adding new themes, color schemes, and more super easy.</p>

<ol>
<li> Install Package Control via the <a href="https://sublime.wbond.net/installation">instructions</a>.</li>
<li> In Sublime, press Cmd+Shift+P and type &ldquo;install package&rdquo;. Hit enter or click on the suggested choice, &ldquo;Package Control: Install Package&rdquo;.</li>
<li> Oh wow, that&rsquo;s all the packages available, sorted and searchable by name. That&rsquo;s not actually super helpful if you don&rsquo;t know what you&rsquo;re looking for. I&rsquo;d start by <a href="https://sublime.wbond.net/browse">browsing</a> some popular packages, or <a href="https://sublime.wbond.net/search">searching</a> for something specific, on the Package Control website. There you can see full descriptions, links to Github repos, and more.</li>
<li> Once you find what you want, do Cmd+Shift+P and &ldquo;install package&rdquo; again, then search for the one you want.</li>
<li> When you select a package, it&rsquo;ll download and install for you- easy!</li>
</ol>


<h4>Appearance</h4>

<p>Color schemes effect the text area: font colors and syntax highlighting. Sublime comes loaded with a few schemes, you can make your own, you can download and install them manually, or you can use Package Control to find and install them.</p>

<ol>
<li> View available schemes and change your active one: SublimeText2 &ndash;> Preferences &ndash;> Color Schemes</li>
<li> Creating your own scheme is complicated and outside the scope of this post.</li>
<li> Download and install a scheme manually:

<ul>
<li>Find a cool scheme <a href="http://colorsublime.com/">here</a> or elsewhere.</li>
<li>Download one you like. You should get a .tmTheme file.</li>
<li>Open SublimeText2 &ndash;> Preferences &ndash;> Browse Packages&hellip;</li>
<li>Paste your downloaded .tmTheme file into the &ldquo;Color Scheme &ndash; Default&rdquo; folder.</li>
<li>The new scheme will now appear in SublimeText2 &ndash;> Preferences &ndash;> Color Schemes &ndash;> Color Scheme- Default menu.</li>
</ul>
</li>
<li> Use Package Control to install a scheme:

<ul>
<li><a href="https://sublime.wbond.net/search/color%20scheme">Search for color schemes</a> on the Package Control site.</li>
<li>View the available ones, checkout screenshots, and pick some favorites.</li>
<li>Follow the Package Control instructions above to find and install the ones you like into your Sublime Text.</li>
<li>See available schemes and change the active one in the SublimeText2 &ndash;> Preferences &ndash;> Color Schemes menu.</li>
</ul>
</li>
</ol>


<p>Themes generally effect the user interface of Sublime, in addition to the appearance, though it&rsquo;s not a hard and fast definition. They may change menu configurations, what information is desplayed around the text area, or add features. The <a href="https://github.com/buymeasoda/soda-theme/">Soda Theme</a> (both light and dark versions) are very popular choices. You can install themes in much the same ways as color schemes.</p>

<ol>
<li> View your active theme:

<ul>
<li>Open SublimeText2 &ndash;> Preferences &ndash;> Default</li>
<li>Find the line that says &ldquo;theme&rdquo;: &ldquo;SuperBasicTheme.sublime-theme&rdquo;</li>
<li>Whatever SuperBasicTheme actually says is the theme that is in effect currently.</li>
</ul>
</li>
<li> Creating your own theme is complicated and outside the scope of this post.</li>
<li> Download and install a theme manually:

<ul>
<li>Find a cool theme on <a href="https://github.com/search?q=sublime+theme&amp;nwo=buymeasoda%2Fsoda-theme&amp;search_target=global&amp;ref=cmdform">Github</a> or elsewhere.</li>
<li>Download one you like. You should get a directory (unzip if it comes as a zipped file).</li>
<li>Open SublimeText2 &ndash;> Preferences &ndash;> Browse Packages&hellip;</li>
<li>Paste your downloaded directory into the &ldquo;Packages&rdquo; folder.</li>
<li>To activate new theme, you&rsquo;ll need to add/edit a line in your SublimeText2 &ndash;> Preferences &ndash;> User file. It will be &ldquo;theme&rdquo;: &ldquo;CoolNewTheme.sublime-theme&rdquo; where CoolNewTheme is replaced with the actual name of your cool new theme. There should be activation instructions from wherever you download from that will give you the correct name.</li>
</ul>
</li>
<li> Use Package Control to install a scheme:

<ul>
<li><a href="https://sublime.wbond.net/search/theme">Search for themes</a> on the Package Control site.</li>
<li>View the available ones, check out screenshots, and pick a keeper.</li>
<li>Follow the Package Control instructions at the beginning of this section to find and install the ones you like into your Sublime Text.</li>
<li>To activate new theme, you&rsquo;ll need to add/edit a line in your SublimeText2 &ndash;> Preferences &ndash;> User file. It will be &ldquo;theme&rdquo;: &ldquo;CoolNewTheme.sublime-theme&rdquo; where CoolNewTheme is replaced with the actual name of your cool new theme. There should be activation instructions from wherever you download from that will give you the correct name.</li>
</ul>
</li>
</ol>


<h4>Settings</h4>

<p>There are two Settings files: Default (global) and User. Settings in the User file will override the Defaults if they conflict. Normally, people edit the User one and leave the Default as is, as a reference for things that can be changed. Your color scheme and theme will be listed in the Settings files, but there are other ways to change them than through these files (see below).</p>

<p>Open SublimeText2 &ndash;> Preferences &ndash;> [Defaut or User]</p>

<p>Some popular preferences to add or change are:</p>

<ul>
<li>&ldquo;save_on_focus_lost&rdquo;: true

<ul>
<li>Automatically saves the file you&rsquo;re editing when you leave it.</li>
</ul>
</li>
<li>&ldquo;wordWrap&rdquo;: true

<ul>
<li>Word wrap set to always be on.</li>
</ul>
</li>
<li>&ldquo;highlight_line&rdquo;: true

<ul>
<li>Highlights the line your cursor is in</li>
</ul>
</li>
<li>&ldquo;line_padding_bottom&rdquo;: 1

<ul>
<li>Gives each line a bit of padding underneath it, making for easier to read text</li>
</ul>
</li>
</ul>


<h4>Key Bindings</h4>

<p>There are also two Key Binding files: Defaut (global) and User. Again, the User file will override the Default, so it&rsquo;s recommended that you leave the Default as a reference and only edit the User. As you add new values to the User file, you&rsquo;ll see the keyboard hints in the dropdown menu reflect your changes. Cool!</p>

<h3>Resources:</h3>

<p><a href="http://docs.sublimetext.info/en/latest/">Unofficial Sublime Documentation</a><br>
<a href="http://thecrumb.com/wiki/sublime">Great list of resources</a><br>
<a href="http://www.sublimetext.com/docs/2/settings.html">Info about settings</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NIRDcast: Intro to Git]]></title>
    <link href="http://nird-blog.herokuapp.com//blog/2013/09/04/nirdcast-intro-to-git/"/>
    <updated>2013-09-04T23:48:00-07:00</updated>
    <id>http://nird-blog.herokuapp.com//blog/2013/09/04/nirdcast-intro-to-git</id>
    <content type="html"><![CDATA[<p><video width='640' height='320' preload='none' controls poster='/images/intro_to_git.png'>
<source src='http://nird-blog.herokuapp.com//videos/intro_to_git.mp4' type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'/>
<source src='http://nird-blog.herokuapp.com//videos/intro_to_git.ogv' "type='video/ogg; codecs=theora, vorbis'"/>
</video></p>

<p>To get started with Git, <a href="http://git-scm.com/download">download it here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About OAuth]]></title>
    <link href="http://nird-blog.herokuapp.com//blog/2013/08/29/about-oauth/"/>
    <updated>2013-08-29T21:35:00-07:00</updated>
    <id>http://nird-blog.herokuapp.com//blog/2013/08/29/about-oauth</id>
    <content type="html"><![CDATA[<p>OAuth is an open standard for authentication. It can be used in two different ways.</p>

<h4>Mode 1 &ndash; Third party authentication</h4>

<p>This is the mode primarily talked about on the internet. The idea is that you authorize one site to get limited data from another site using the OAuth API. For example, a site lets you login with your Facebook or Google credentials instead of setting up an account with them, or a Twitter phone app can get and send tweets from your account.</p>

<!-- more -->


<p><img class="center" src="http://nird-blog.herokuapp.com//images/signin.png" width="250" height="150" title="Example sign in" ></p>

<p>The API Producer (Facebook, etc.) is responsible for validating the user&rsquo;s credentials internally and then giving the Consumer site a special token that the Producer will treat as an authenticated user with limited access. Each Producer specifies what is available via their OAuth API, so it can be as little as email address, or as much as everything about a user on the site. The Producer can also make the authorization tokens expire after a set period of time for additional security.
The benefit of using OAuth for authentication depends on what the Consumer site needs. At the most basic level, the Consumer site can use another site&rsquo;s user system instead of maintaining a separate one. This is convenient for the user, who does not have to have additional usernames/passwords, and puts the onus of storing the passwords securely on the other site. If the Consumer site wants to interact with the Producer, then the API gives a clear set of available interactions and enforces that the user permitted the Consumer site to perform such actions. So OAuth lets two sites share private data once the user has granted permission for this sharing.</p>

<h4>Mode 2 &ndash; Browser pass through</h4>

<p>This mode requires that you have control of both the Producer and Consumer sites/servers. It is for when you have two servers that need to talk to each other, but they are not within the same firewall, so they cannot communicate directly. You can use OAuth signatures and the browser to proxy pass the communication.
For example, say that a site has several ebooks that in turn have photos within them. These photos are stored on a separate server than the ebooks and they are authentication controlled. When a browser (aka user) asks for an ebook, the ebook Consumer wants to be able to send the browser working links to the photos so everything looks good in the browser. Since the Consumer knows an authentication token for the Producer, it signs (part of the OAuth protocol) the url and the Producer will then load the links when the browser goes to load the ebook.
This is valuable because it keeps the Producer&rsquo;s data private except when the authorized site asks for it. It is a preset version of mode 1 enabling the servers to act on the behalf of a possibly anonymous user. In addition, if expiration times are added to the Producer&rsquo;s OAuth filtering, then even the permitted user will have limited access to the data.</p>

<h4>Mode 3(ish) &ndash; Hybrid</h4>

<p>Some sites let you set a single &ldquo;admin&rdquo; OAuth token that can then be used to perform the API calls with specific user information contained within the POST command as needed.</p>

<p>Of note, OAuth has two different versions, 1.0 and 2.0. They are not compatible and have very different intentions. This is relevant, because many people argue that the new version is less secure than 1.0 and should not be used. For an explanation from a creator of OAuth 1.0 on the issues with 2.0 see: <a href="http://hueniverse.com/2012/07/oauth-2-0-and-the-road-to-hell/">http://hueniverse.com/2012/07/oauth-2-0-and-the-road-to-hell/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Teaching Ruby]]></title>
    <link href="http://nird-blog.herokuapp.com//blog/2013/07/19/teaching-ruby-for-fun-and-profit/"/>
    <updated>2013-07-19T14:18:00-07:00</updated>
    <id>http://nird-blog.herokuapp.com//blog/2013/07/19/teaching-ruby-for-fun-and-profit</id>
    <content type="html"><![CDATA[<p>Last February, Renée Hendrickson (nee DeVoursney) gave the keynote presentation, &ldquo;Teaching Ruby for Fun and Profit!&rdquo; at <a href="http://rubyfuza.org/">Ruby Fuza</a>. You can watch it <a href="http://www.youtube.com/watch?v=gL_MZuQ574g">here</a>.</p>
]]></content>
  </entry>
  
</feed>
